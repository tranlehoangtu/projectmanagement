package com.javacode.project.api;

import java.util.List;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.javacode.project.domain.User;
import com.javacode.project.service.UserService;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@RestController
@RequestMapping("api/v1")
@CrossOrigin
public class UserApi {
	
	private final UserService userService;

	@GetMapping("users")
	public ResponseEntity<List<User>> getUsers() {
		return ResponseEntity.ok().body(userService.findAll());
	}
	
	@GetMapping("user/{username}")
	public ResponseEntity<User> getUserByUsername(@PathVariable("username") String username) {
		Optional<User> optUser = userService.findByUsername(username);
//		studentService.findById(id).map(student -> ResponseEntity.ok().body(student))
//		.orElseGet(() -> ResponseEntity.ok().body(null));
		
		return optUser
				.map(user -> ResponseEntity.ok().body(user))
				.orElseGet(() -> ResponseEntity.notFound().build());
	}
	
//	private final UserService userService;
//
//	@GetMapping("user")
//	public List<User> getAllUser() {
//		return userService.findAll();
//	}
//	
//	@GetMapping("user/{id}")
//	public ResponseEntity<User> getUser(@PathVariable("id") String id) {
//		return ResponseEntity.ok().body(userService.findById(id).get());
//	}
//	
//	@PostMapping("user/login")
//	public ResponseEntity<User> authenticateUser(@RequestBody User user) {
//
//		return Optional.ofNullable(userService.userAuthenticate(user.getUsername(), user.getPassword()))
//				.map(authenticatedUser -> ResponseEntity.ok().body(authenticatedUser))
//				.orElseGet(() -> ResponseEntity.ok().body(null));
//	}
//
//	@PostMapping("user/add")
//	public void addUser(@RequestBody User user) {
//
//		userService.insert(user);
//	}
	
}
