package com.javacode.Spring.Security.api;

import javax.annotation.security.RolesAllowed;

import org.springframework.beans.BeanUtils;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.javacode.Spring.Security.domain.dto.AddCommentReq;
import com.javacode.Spring.Security.domain.model.Comment;
import com.javacode.Spring.Security.domain.model.Role;
import com.javacode.Spring.Security.domain.model.Task;
import com.javacode.Spring.Security.service.CommentService;
import com.javacode.Spring.Security.service.TaskService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("api")
@RequiredArgsConstructor
@CrossOrigin
public class CommentApi {
	private final CommentService commentService;
	private final TaskService taskService;

	@RolesAllowed({ Role.MANAGEMENT, Role.STUDENT })
	@GetMapping("comment/{id}")
	public ResponseEntity<Comment> getComment(@PathVariable("id") String id) {
		return ResponseEntity.ok().body(commentService.findById(id).get());
	}

	@RolesAllowed({ Role.MANAGEMENT, Role.STUDENT })
	@PostMapping("comment")
	public ResponseEntity<Comment> addComment(@RequestBody AddCommentReq addCommentReq) {
		Comment comment = new Comment();
		BeanUtils.copyProperties(addCommentReq, comment);

		System.out.println(comment.toString());
		
//		Comment insertedComment = commentService.insert(comment);
//
//		Task task = taskService.findById(addCommentReq.getTaskId()).get();
//		task.getComments().add(insertedComment.getId());
//		
//		System.out.println(task.getComments());
//
//		taskService.save(task);
		return ResponseEntity.ok().body(null);
	}
}
